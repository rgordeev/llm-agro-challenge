#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Справочные данные для валидации сельскохозяйственных данных.
"""

# Список допустимых операций
VALID_OPERATIONS = [
    "1-я междурядная культивация",
    "2-я междурядная культивация",
    "Боронование довсходовое",
    "Внесение минеральных удобрений",
    "Выравнивание зяби",
    "2-е Выравнивание зяби",
    "Гербицидная обработка",
    "1 Гербицидная обработка",
    "2 Гербицидная обработка",
    "3 Гербицидная обработка",
    "4 Гербицидная обработка",
    "Дискование",
    "Дискование 2-е",
    "Инсектицидная обработка",
    "Культивация",
    "Пахота",
    "Подкормка",
    "Предпосевная культивация",
    "Прикатывание посевов",
    "Сев",
    "Сплошная культивация",
    "Уборка",
    "Функицидная обработка",
    "Чизелевание"
]

# Структура подразделений
DIVISIONS = {
    "АОР": {
        "Кавказ": [18, 19],
        "Север": [3, 7, 10, 20],
        "Центр": [1, 4, 5, 6, 9],
        "Юг": [11, 12, 16, 17]
    },
    "ТСК": [],
    "АО Кропоткинское": [],
    "Восход": [],
    "Колхоз Прогресс": [],
    "Мир": [],
    "СП Коломейцево": []
}

# Список допустимых культур
VALID_CROPS = [
    "Озимая пшеница",
    "Озимый ячмень",
    "Яровой ячмень",
    "Овес",
    "Горох",
    "Подсолнечник",
    "Кукуруза",
    "Соя",
    "Рапс",
    "Горчица",
    "Лен",
    "Многолетние травы",
    "Многолетние травы текущего года",
    "Многолетние травы прошлых лет",
    "Однолетние травы",
    "Люцерна",
    "Эспарцет",
    "Донник",
    "Клевер",
    "Тимофеевка",
    "Райграс",
    "Овсяница",
    "Кострец",
    "Житняк",
    "Пырей",
    "Суданская трава",
    "Сорго",
    "Чумиза",
    "Просо",
    "Гречиха",
    "Чечевица",
    "Нут",
    "Люпин",
    "Вика",
    "Рожь",
    "Тритикале",
    "Полба",
    "Пшеница твердая",
    "Пшеница мягкая",
    "Ячмень пивоваренный",
    "Ячмень фуражный",
    "Овес фуражный",
    "Овес продовольственный",
    "Горох продовольственный",
    "Горох кормовой",
    "Подсолнечник масличный",
    "Подсолнечник кондитерский",
    "Кукуруза на зерно",
    "Кукуруза на силос",
    "Соя продовольственная",
    "Соя кормовая",
    "Рапс озимый",
    "Рапс яровой",
    "Горчица белая",
    "Горчица сарептская",
    "Лен масличный",
    "Лен долгунец"
]

# Словарь сокращений
ABBREVIATIONS = {
    "мн тр": "Многолетние травы",
    "оз пш": "Озимая пшеница",
    "оз яч": "Озимый ячмень",
    "яр яч": "Яровой ячмень",
    "подс": "Подсолнечник",
    "кук": "Кукуруза",
    "горох": "Горох",
    "овес": "Овес",
    "соя": "Соя",
    "рапс": "Рапс",
    "горч": "Горчица",
    "лен": "Лен",
    "одн тр": "Однолетние травы",
    "люц": "Люцерна",
    "эсп": "Эспарцет",
    "дон": "Донник",
    "клев": "Клевер",
    "тим": "Тимофеевка",
    "райг": "Райграс",
    "овсян": "Овсяница",
    "костр": "Кострец",
    "жит": "Житняк",
    "пыр": "Пырей",
    "суд": "Суданская трава",
    "сорг": "Сорго",
    "чум": "Чумиза",
    "прос": "Просо",
    "греч": "Гречиха",
    "чеч": "Чечевица",
    "нут": "Нут",
    "люп": "Люпин",
    "вика": "Вика",
    "рожь": "Рожь",
    "трит": "Тритикале",
    "полба": "Полба"
}

# Словарь исправлений для операций
OPERATION_CORRECTIONS = {
    "борон": "Боронование",
    "культ": "Культивация",
    "пах": "Пахота",
    "сев": "Сев",
    "убор": "Уборка",
    "герб": "Гербицидная обработка",
    "инсект": "Инсектицидная обработка",
    "фунгиц": "Функицидная обработка",
    "подкорм": "Подкормка",
    "прикат": "Прикатывание посевов",
    "диск": "Дискование",
    "чизел": "Чизелевание"
}

# Словарь исправлений для культур
CROP_CORRECTIONS = {
    "пшеница": "Озимая пшеница",
    "ячмень": "Яровой ячмень",
    "травы": "Многолетние травы",
    "подсол": "Подсолнечник",
    "кукур": "Кукуруза"
}

def get_division_from_department(department_number: int) -> str:
    """
    Получение подразделения по номеру отдела.
    
    Args:
        department_number (int): Номер отдела
        
    Returns:
        str: Название подразделения или None, если отдел не найден
    """
    for division, regions in DIVISIONS.items():
        if not regions:  # Для подразделений без регионов
            continue
        for region, departments in regions.items():
            if department_number in departments:
                return division
    return None

def get_production_unit_from_department(department_number: int) -> str:
    """
    Получение производственного участка по номеру отдела.
    
    Args:
        department_number (int): Номер отдела
        
    Returns:
        str: Название производственного участка или None, если отдел не найден
    """
    for division, regions in DIVISIONS.items():
        if not regions:  # Для подразделений без регионов
            continue
        for region, departments in regions.items():
            if department_number in departments:
                return region
    return None

def correct_operation(operation: str) -> str:
    """
    Исправление названия операции.
    
    Args:
        operation (str): Исходное название операции
        
    Returns:
        str: Исправленное название операции
    """
    operation_lower = operation.lower()
    for key, value in OPERATION_CORRECTIONS.items():
        if key in operation_lower:
            return value
    return operation

def correct_crop(crop: str) -> str:
    """
    Исправление названия культуры.
    
    Args:
        crop (str): Исходное название культуры
        
    Returns:
        str: Исправленное название культуры
    """
    crop_lower = crop.lower()
    for key, value in CROP_CORRECTIONS.items():
        if key in crop_lower:
            return value
    return crop

def expand_abbreviation(abbr: str) -> str:
    """
    Расшифровка сокращения.
    
    Args:
        abbr (str): Сокращение
        
    Returns:
        str: Полное название или исходное сокращение, если не найдено
    """
    return ABBREVIATIONS.get(abbr.lower(), abbr) 